---
import ScrollReveal from '../animations/ScrollReveal.tsx';
import CardReveal from '../animations/CardReveal.tsx';
---

<section id="nutech-info" class="py-12 sm:py-16 lg:py-24 bg-gradient-to-b from-white via-accent-50 to-white">
  <div class="container mx-auto px-4 sm:px-6 md:px-8 lg:px-36 xl:px-44 2xl:px-52">
    <!-- Section Badge -->
    <div class="text-center mb-8">
      <div class="group relative inline-flex items-center px-4 py-2 bg-gradient-to-br from-accent-100 to-accent-200 border-2 border-accent-300 rounded-full shadow-lg hover:shadow-2xl hover:shadow-accent-500/50 transition-all duration-500 hover:scale-110 overflow-hidden cursor-pointer">
        <div class="absolute inset-0 bg-gradient-to-r from-transparent via-white/30 to-transparent -translate-x-full group-hover:translate-x-full transition-transform duration-1000"></div>
        <span class="relative text-accent-700 text-sm font-bold group-hover:text-accent-800 transition-colors duration-300">Nutech</span>
      </div>
    </div>

    <!-- Nutech en pocas palabras -->
    <ScrollReveal direction="up" delay={0} client:visible>
      <div class="text-center mb-10 lg:mb-12">
        <h2 class="text-3xl md:text-4xl lg:text-5xl font-bold text-secondary-800 mb-4 px-4">
          Nutech en pocas palabras
        </h2>
        <p class="text-lg md:text-xl text-secondary-600 max-w-3xl mx-auto mb-8 px-4">
          Expertos certificados en RPA con estrategias más allá de la automatización básica.
        </p>
      
      <!-- Stats Grid - Layout 2-1-2 con Widget Central Grande -->
      <div class="max-w-xs md:max-w-5xl mx-auto">
        <!-- Primera fila: 2 widgets -->
        <div class="grid grid-cols-2 gap-4 sm:gap-6 mb-4 sm:mb-6">
        <!-- Casos de Uso Widget -->
        <div class="group relative bg-gradient-to-br from-white to-accent-50 border-2 border-transparent rounded-2xl shadow-xl p-4 hover:border-accent-200 hover:shadow-2xl transition-all duration-500 overflow-hidden">
          <div class="absolute inset-0 bg-gradient-to-r from-transparent via-accent-200/20 to-transparent -translate-x-full group-hover:translate-x-full transition-transform duration-1000"></div>
          <div class="relative flex flex-col items-center text-center">
            <div class="w-10 h-10 bg-gradient-to-br from-accent-100 to-accent-200 rounded-lg flex items-center justify-center mb-3 group-hover:scale-110 transition-transform duration-300 shadow-md">
              <svg class="w-5 h-5 text-accent-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path>
              </svg>
            </div>
            <div class="counter text-3xl font-black text-secondary-800 mb-1 highlight-number" data-target="2500">0</div>
            <div class="text-xs text-secondary-600 font-medium">Casos de Uso</div>
          </div>
        </div>

        <!-- Especialización Widget -->
        <div class="group relative bg-gradient-to-br from-white to-accent-50 border-2 border-transparent rounded-2xl shadow-xl p-4 hover:border-accent-200 hover:shadow-2xl transition-all duration-500 overflow-hidden">
          <div class="absolute inset-0 bg-gradient-to-r from-transparent via-accent-200/20 to-transparent -translate-x-full group-hover:translate-x-full transition-transform duration-1000"></div>
          <div class="relative flex flex-col items-center text-center">
            <div class="w-10 h-10 bg-gradient-to-br from-accent-100 to-accent-200 rounded-lg flex items-center justify-center mb-3 group-hover:scale-110 transition-transform duration-300 shadow-md">
              <svg class="w-5 h-5 text-accent-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
              </svg>
            </div>
            <div class="text-2xl font-black text-secondary-800 mb-1 group-hover:text-accent-700 transition-colors duration-300">RPA & IA</div>
            <div class="text-xs text-secondary-600 font-medium">Especialización</div>
          </div>
        </div>
        </div>

        <!-- Widget Central: Globo Terráqueo Giratorio con Banderas -->
        <div class="group relative mb-4 sm:mb-6" style="overflow: visible;">
          
          <!-- Banderas Flotantes Orbitando -->
          <div class="absolute inset-0 pointer-events-none" style="overflow: visible; z-index: 50;">
            <span class="orbiting-flag" style="--orbit-delay: 0s; --orbit-angle: 0deg;">
              <img src="https://cdn.jsdelivr.net/npm/svg-country-flags@1.2.10/svg/pe.svg" alt="Perú" class="flag-icon" />
            </span>
            <span class="orbiting-flag" style="--orbit-delay: -0.625s; --orbit-angle: 45deg;">
              <img src="https://cdn.jsdelivr.net/npm/svg-country-flags@1.2.10/svg/us.svg" alt="USA" class="flag-icon" />
            </span>
            <span class="orbiting-flag" style="--orbit-delay: -1.25s; --orbit-angle: 90deg;">
              <img src="https://cdn.jsdelivr.net/npm/svg-country-flags@1.2.10/svg/mx.svg" alt="México" class="flag-icon" />
            </span>
            <span class="orbiting-flag" style="--orbit-delay: -1.875s; --orbit-angle: 135deg;">
              <img src="https://cdn.jsdelivr.net/npm/svg-country-flags@1.2.10/svg/co.svg" alt="Colombia" class="flag-icon" />
            </span>
            <span class="orbiting-flag" style="--orbit-delay: -2.5s; --orbit-angle: 180deg;">
              <img src="https://cdn.jsdelivr.net/npm/svg-country-flags@1.2.10/svg/es.svg" alt="España" class="flag-icon" />
            </span>
            <span class="orbiting-flag" style="--orbit-delay: -3.125s; --orbit-angle: 225deg;">
              <img src="https://cdn.jsdelivr.net/npm/svg-country-flags@1.2.10/svg/ar.svg" alt="Argentina" class="flag-icon" />
            </span>
            <span class="orbiting-flag" style="--orbit-delay: -3.75s; --orbit-angle: 270deg;">
              <img src="https://cdn.jsdelivr.net/npm/svg-country-flags@1.2.10/svg/br.svg" alt="Brasil" class="flag-icon" />
            </span>
            <span class="orbiting-flag" style="--orbit-delay: -4.375s; --orbit-angle: 315deg;">
              <img src="https://cdn.jsdelivr.net/npm/svg-country-flags@1.2.10/svg/cl.svg" alt="Chile" class="flag-icon" />
            </span>
          </div>
          
          <div class="relative flex flex-col items-center text-center z-10">
            <!-- Globo Terráqueo Giratorio -->
            <div class="world-globe mb-6" id="world-globe-container">
              <div class="world-sphere">
                <div class="world-texture" role="img" aria-label="Rotating world globe"></div>
              </div>
            </div>
            
            <div class="flex items-baseline gap-2 mb-2">
              <div class="counter text-6xl md:text-7xl lg:text-8xl font-black text-secondary-800 diversity-number" data-target="10">0</div>
              <div class="text-3xl md:text-4xl font-bold text-secondary-600">+</div>
            </div>
            <div class="text-base md:text-lg text-secondary-600 font-semibold">Nacionalidades</div>
          </div>
        </div>

        <!-- Tercera fila: 2 widgets -->
        <div class="grid grid-cols-2 gap-4 sm:gap-6">
        <!-- Experiencia Widget -->
        <div class="group relative bg-gradient-to-br from-white to-accent-50 border-2 border-transparent rounded-2xl shadow-xl p-4 hover:border-accent-200 hover:shadow-2xl transition-all duration-500 overflow-hidden">
          <div class="absolute inset-0 bg-gradient-to-r from-transparent via-accent-200/20 to-transparent -translate-x-full group-hover:translate-x-full transition-transform duration-1000"></div>
          <div class="relative flex flex-col items-center text-center">
            <div class="w-10 h-10 bg-gradient-to-br from-accent-100 to-accent-200 rounded-lg flex items-center justify-center mb-3 group-hover:scale-110 transition-transform duration-300 shadow-md">
              <svg class="w-5 h-5 text-accent-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
            </div>
            <div class="flex items-baseline gap-1 mb-1">
              <div class="counter text-3xl font-black text-secondary-800 highlight-number" data-target="14">0</div>
              <div class="text-lg font-bold text-secondary-600">+</div>
            </div>
            <div class="text-xs text-secondary-600 font-medium">Años</div>
          </div>
        </div>

        <!-- Proyectos Widget -->
        <div class="group relative bg-gradient-to-br from-white to-accent-50 border-2 border-transparent rounded-2xl shadow-xl p-4 hover:border-accent-200 hover:shadow-2xl transition-all duration-500 overflow-hidden">
          <div class="absolute inset-0 bg-gradient-to-r from-transparent via-accent-200/20 to-transparent -translate-x-full group-hover:translate-x-full transition-transform duration-1000"></div>
          <div class="relative flex flex-col items-center text-center">
            <div class="w-10 h-10 bg-gradient-to-br from-accent-100 to-accent-200 rounded-lg flex items-center justify-center mb-3 group-hover:scale-110 transition-transform duration-300 shadow-md">
              <svg class="w-5 h-5 text-accent-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
              </svg>
            </div>
            <div class="flex items-baseline gap-1 mb-1">
              <div class="counter text-3xl font-black text-secondary-800 highlight-number" data-target="100">0</div>
              <div class="text-lg font-bold text-secondary-600">+</div>
            </div>
            <div class="text-xs text-secondary-600 font-medium">Proyectos</div>
          </div>
        </div>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  .perspective-1000 {
    perspective: 1000px;
  }
  
  .widget-card {
    position: relative;
    min-height: 280px;
  }
  
  .widget-inner {
    position: relative;
    width: 100%;
    height: 100%;
    transition: transform 0.8s;
    transform-style: preserve-3d;
  }
  
  .widget-card.flipped .widget-inner {
    transform: rotateY(180deg);
  }
  
  .widget-front,
  .widget-back {
    position: absolute;
    width: 100%;
    min-height: 280px;
    backface-visibility: hidden;
    -webkit-backface-visibility: hidden;
  }
  
  .widget-back {
    transform: rotateY(180deg);
  }
  
  /* Estilos para los puntos de países */
  .country-pin:hover .country-tooltip {
    opacity: 1;
    pointer-events: auto;
    transform: translateX(-50%) translateY(-4px);
  }
  
  .country-marker.active {
    animation: country-glow 0.6s ease-in-out;
    box-shadow: 0 0 20px rgba(255, 255, 255, 0.8), 0 0 40px rgba(59, 130, 246, 0.6);
  }
  
  @keyframes country-glow {
    0%, 100% {
      box-shadow: 0 0 10px rgba(255, 255, 255, 0.5);
      transform: scale(1);
    }
    50% {
      box-shadow: 0 0 30px rgba(255, 255, 255, 1), 0 0 60px rgba(59, 130, 246, 0.8);
      transform: scale(1.3);
    }
  }
</style>

<script>
  // Animación de contadores
  document.addEventListener('DOMContentLoaded', () => {
    const counters = document.querySelectorAll('.counter');
    
    const animateCounter = (counter) => {
      const target = parseInt(counter.getAttribute('data-target'));
      const duration = 2000;
      const increment = target / (duration / 16);
      let current = 0;
      
      const updateCounter = () => {
        current += increment;
        if (current < target) {
          counter.textContent = Math.floor(current);
          requestAnimationFrame(updateCounter);
        } else {
          counter.textContent = target;
        }
      };
      
      updateCounter();
    };
    
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          const counter = entry.target;
          animateCounter(counter);
          observer.unobserve(counter);
        }
      });
    }, { threshold: 0.5 });
    
    counters.forEach(counter => observer.observe(counter));
    
    // Efecto flip en widgets
    const widgetIcons = document.querySelectorAll('.widget-icon');
    
    widgetIcons.forEach(icon => {
      icon.addEventListener('click', (e) => {
        e.stopPropagation();
        const card = icon.closest('.widget-card');
        if (card) {
          card.classList.toggle('flipped');
        }
      });
    });
    
    // Efecto brillo en países
    const countryPins = document.querySelectorAll('.country-pin');
    
    countryPins.forEach(pin => {
      pin.addEventListener('click', (e) => {
        e.preventDefault();
        const marker = pin.querySelector('.country-marker');
        
        // Remover clase active de todos los marcadores
        document.querySelectorAll('.country-marker').forEach(m => {
          m.classList.remove('active');
        });
        
        // Agregar clase active al marcador clickeado
        marker.classList.add('active');
        
        // Remover la clase después de la animación
        setTimeout(() => {
          marker.classList.remove('active');
        }, 600);
      });
    });
  });

  // ===================================
  // PERFORMANCE: Intersection Observer para pausar animaciones
  // ===================================
  const observerOptions = {
    root: null,
    threshold: 0.1,
    rootMargin: '50px'
  };

  // Observer para el globo terráqueo
  const globeObserver = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      const texture = entry.target.querySelector('.world-texture');
      const sphere = entry.target.querySelector('.world-sphere');
      const flags = document.querySelectorAll('.orbiting-flag');
      
      if (entry.isIntersecting) {
        // Reanudar animaciones
        if (texture) texture.style.animationPlayState = 'running';
        if (sphere) sphere.style.animationPlayState = 'running';
        flags.forEach(flag => flag.style.animationPlayState = 'running');
      } else {
        // Pausar animaciones cuando no está visible
        if (texture) texture.style.animationPlayState = 'paused';
        if (sphere) sphere.style.animationPlayState = 'paused';
        flags.forEach(flag => flag.style.animationPlayState = 'paused');
      }
    });
  }, observerOptions);

  // Observar el globo
  const globeContainer = document.getElementById('world-globe-container');
  if (globeContainer) {
    globeObserver.observe(globeContainer);
  }

  // Observer para contadores animados
  const counterObserver = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting && !entry.target.classList.contains('counted')) {
        entry.target.classList.add('counted');
        const target = parseInt(entry.target.getAttribute('data-target'));
        animateCounter(entry.target, target);
      }
    });
  }, observerOptions);

  // Animar contadores cuando son visibles
  function animateCounter(element, target) {
    const duration = 2000;
    const start = 0;
    const increment = target / (duration / 16);
    let current = start;
    
    const timer = setInterval(() => {
      current += increment;
      if (current >= target) {
        element.textContent = target;
        clearInterval(timer);
      } else {
        element.textContent = Math.floor(current);
      }
    }, 16);
  }

  // Observar todos los contadores
  document.querySelectorAll('.counter').forEach(counter => {
    counterObserver.observe(counter);
  });
</script>

<!-- Equipo Section -->
<section id="equipo" class="py-12 sm:py-16 lg:py-24 bg-gradient-to-b from-white via-accent-50 to-white">
  <div class="container mx-auto px-4 sm:px-6 md:px-8 lg:px-36 xl:px-44 2xl:px-52">
    <!-- Section Badge -->
    <div class="text-center mb-8">
      <div class="group relative inline-flex items-center px-4 py-2 bg-gradient-to-br from-accent-100 to-accent-200 border-2 border-accent-300 rounded-full shadow-lg hover:shadow-2xl hover:shadow-accent-500/50 transition-all duration-500 hover:scale-110 overflow-hidden cursor-pointer">
        <div class="absolute inset-0 bg-gradient-to-r from-transparent via-white/30 to-transparent -translate-x-full group-hover:translate-x-full transition-transform duration-1000"></div>
        <span class="relative text-accent-700 text-sm font-bold group-hover:text-accent-800 transition-colors duration-300">Nuestro Equipo</span>
      </div>
    </div>
    
    <!-- Section Header -->
    <ScrollReveal direction="up" delay={0} client:visible>
      <div class="text-center mb-8 sm:mb-10 lg:mb-12">
        <h2 class="text-3xl md:text-4xl lg:text-5xl font-bold text-secondary-800 mb-4 px-4">
          Equipo con amplia experiencia
        </h2>
      </div>
    </ScrollReveal>
    
    <!-- Team Features Grid -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6 md:gap-8 max-w-xs md:max-w-none mx-auto">
      <!-- Certificaciones -->
      <div class="group relative bg-gradient-to-br from-white to-accent-50 rounded-2xl shadow-xl p-5 sm:p-8 hover:shadow-2xl transition-all duration-500 overflow-hidden border-2 border-transparent hover:border-accent-200">
        <!-- Efecto de brillo animado -->
        <div class="absolute inset-0 bg-gradient-to-r from-transparent via-accent-200/20 to-transparent -translate-x-full group-hover:translate-x-full transition-transform duration-1000"></div>
        
        <div class="relative">
          <div class="w-20 h-20 mx-auto bg-gradient-to-br from-accent-100 to-accent-200 rounded-2xl flex items-center justify-center mb-6 group-hover:scale-110 transition-transform duration-500 shadow-lg">
            <svg class="w-10 h-10 text-accent-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4M7.835 4.697a3.42 3.42 0 001.946-.806 3.42 3.42 0 014.438 0 3.42 3.42 0 001.946.806 3.42 3.42 0 013.138 3.138 3.42 3.42 0 00.806 1.946 3.42 3.42 0 010 4.438 3.42 3.42 0 00-.806 1.946 3.42 3.42 0 01-3.138 3.138 3.42 3.42 0 00-1.946.806 3.42 3.42 0 01-4.438 0 3.42 3.42 0 00-1.946-.806 3.42 3.42 0 01-3.138-3.138 3.42 3.42 0 00-.806-1.946 3.42 3.42 0 010-4.438 3.42 3.42 0 00.806-1.946 3.42 3.42 0 013.138-3.138z"></path>
            </svg>
          </div>
          <h4 class="text-2xl font-bold text-secondary-800 mb-3 text-center group-hover:text-accent-700 transition-colors duration-300">Certificaciones</h4>
          <p class="text-secondary-600 text-center leading-relaxed">Partners oficiales de plataformas tecnológicas</p>
        </div>
      </div>

      <!-- Innovación -->
      <div class="group relative bg-gradient-to-br from-white to-accent-50 rounded-2xl shadow-xl p-5 sm:p-8 hover:shadow-2xl transition-all duration-500 overflow-hidden border-2 border-transparent hover:border-accent-200">
        <!-- Efecto de brillo animado -->
        <div class="absolute inset-0 bg-gradient-to-r from-transparent via-accent-200/20 to-transparent -translate-x-full group-hover:translate-x-full transition-transform duration-1000"></div>
        
        <div class="relative">
          <div class="w-20 h-20 mx-auto bg-gradient-to-br from-accent-100 to-accent-200 rounded-2xl flex items-center justify-center mb-6 group-hover:scale-110 transition-transform duration-500 shadow-lg">
            <svg class="w-10 h-10 text-accent-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z"></path>
            </svg>
          </div>
          <h4 class="text-2xl font-bold text-secondary-800 mb-3 text-center group-hover:text-accent-700 transition-colors duration-300">Innovación</h4>
          <p class="text-secondary-600 text-center leading-relaxed">IA, ML y OCR para automatización inteligente</p>
        </div>
      </div>

      <!-- Transformación -->
      <div class="group relative bg-gradient-to-br from-white to-accent-50 rounded-2xl shadow-xl p-5 sm:p-8 hover:shadow-2xl transition-all duration-500 overflow-hidden border-2 border-transparent hover:border-accent-200">
        <!-- Efecto de brillo animado -->
        <div class="absolute inset-0 bg-gradient-to-r from-transparent via-accent-200/20 to-transparent -translate-x-full group-hover:translate-x-full transition-transform duration-1000"></div>
        
        <div class="relative">
          <div class="w-20 h-20 mx-auto bg-gradient-to-br from-accent-100 to-accent-200 rounded-2xl flex items-center justify-center mb-6 group-hover:scale-110 transition-transform duration-500 shadow-lg">
            <svg class="w-10 h-10 text-accent-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
            </svg>
          </div>
          <h4 class="text-2xl font-bold text-secondary-800 mb-3 text-center group-hover:text-accent-700 transition-colors duration-300">Transformación</h4>
          <p class="text-secondary-600 text-center leading-relaxed">Reinventamos procesos para maximizar eficiencia</p>
        </div>
      </div>
    </div>
  </div>
</section>
