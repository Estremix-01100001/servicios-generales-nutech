---
import { companyInfo } from '../../database/data';
---

<section id="contacto" class="py-12 sm:py-16 lg:py-24 bg-gradient-to-br from-secondary-800 to-secondary-900">
  <div class="container mx-auto px-4 sm:px-6 md:px-8 lg:px-36 xl:px-44 2xl:px-52">
    <!-- Section Badge -->
    <div class="text-center mb-8">
      <div class="group relative inline-flex items-center px-4 py-2 bg-gradient-to-br from-accent-100 to-accent-200 border-2 border-accent-300 rounded-full shadow-lg hover:shadow-2xl hover:shadow-accent-500/50 transition-all duration-500 hover:scale-110 overflow-hidden cursor-pointer">
        <div class="absolute inset-0 bg-gradient-to-r from-transparent via-white/30 to-transparent -translate-x-full group-hover:translate-x-full transition-transform duration-1000"></div>
        <span class="relative text-accent-700 text-sm font-bold group-hover:text-accent-800 transition-colors duration-300">Contacto</span>
      </div>
    </div>

    <!-- Section Header -->
    <div class="text-center mb-8 sm:mb-10 lg:mb-12">
      <h2 class="text-3xl md:text-4xl lg:text-5xl font-bold text-white mb-4 px-4">
        ¿Listo para revolucionar sus procesos?
      </h2>
      <p class="text-lg md:text-xl text-gray-300 max-w-4xl mx-auto px-4">
        Descubra cómo nuestras soluciones pueden transformar su empresa
      </p>
    </div>

    <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 max-w-xs md:max-w-none mx-auto">
      <!-- Contact Form -->
      <div class="animate-slide-in-left">
        <div class="group relative bg-gradient-to-br from-white to-accent-50 rounded-3xl p-8 sm:p-10 shadow-xl hover:shadow-2xl transition-all duration-500 overflow-hidden border-2 border-transparent hover:border-accent-200">
          <div class="absolute inset-0 bg-gradient-to-r from-transparent via-accent-200/20 to-transparent -translate-x-full group-hover:translate-x-full transition-transform duration-1000"></div>
          
          <div class="relative mb-8">
            <h3 class="text-3xl font-bold text-secondary-800 mb-2">
              Solicitar Consulta Gratuita
            </h3>
            <p class="text-secondary-600 text-sm">
              Complete el formulario y nos pondremos en contacto a la brevedad
            </p>
          </div>
          
          <form class="relative space-y-5" id="contact-form" method="POST" action="#" novalidate>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-5">
              <div class="group">
                <label for="name" class="block text-sm font-semibold text-secondary-800 mb-2">
                  Nombre y Apellido <span class="text-red-500">*</span>
                </label>
                <div class="relative">
                  <div class="absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none">
                    <svg class="w-5 h-5 text-gray-400 group-focus-within:text-accent-600 transition-colors" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                    </svg>
                  </div>
                  <input 
                    type="text" 
                    id="name" 
                    name="name" 
                    required 
                    class="w-full pl-12 pr-4 py-3.5 border-2 border-gray-200 rounded-xl focus:ring-2 focus:ring-accent-500 focus:border-accent-600 transition-all duration-300 bg-gray-50 focus:bg-white text-secondary-800 placeholder-gray-400"
                    placeholder="Su nombre completo"
                  />
                </div>
              </div>
              
              <div class="group">
                <label for="company" class="block text-sm font-semibold text-secondary-800 mb-2">
                  Empresa <span class="text-red-500">*</span>
                </label>
                <div class="relative">
                  <div class="absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none">
                    <svg class="w-5 h-5 text-gray-400 group-focus-within:text-accent-600 transition-colors" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path>
                    </svg>
                  </div>
                  <input 
                    type="text" 
                    id="company" 
                    name="company" 
                    required 
                    class="w-full pl-12 pr-4 py-3.5 border-2 border-gray-200 rounded-xl focus:ring-2 focus:ring-accent-500 focus:border-accent-600 transition-all duration-300 bg-gray-50 focus:bg-white text-secondary-800 placeholder-gray-400"
                    placeholder="Nombre de su empresa"
                  />
                </div>
              </div>
            </div>
            
            <div class="grid grid-cols-1 md:grid-cols-2 gap-5">
              <div class="group">
                <label for="email" class="block text-sm font-semibold text-secondary-800 mb-2">
                  Email <span class="text-red-500">*</span>
                </label>
                <div class="relative">
                  <div class="absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none">
                    <svg class="w-5 h-5 text-gray-400 group-focus-within:text-accent-600 transition-colors" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
                    </svg>
                  </div>
                  <input 
                    type="email" 
                    id="email" 
                    name="email" 
                    required 
                    class="w-full pl-12 pr-4 py-3.5 border-2 border-gray-200 rounded-xl focus:ring-2 focus:ring-accent-500 focus:border-accent-600 transition-all duration-300 bg-gray-50 focus:bg-white text-secondary-800 placeholder-gray-400"
                    placeholder="su@empresa.com"
                  />
                </div>
              </div>
              
              <div class="group">
                <label for="phone" class="block text-sm font-semibold text-secondary-800 mb-2">
                  Teléfono
                </label>
                <div class="relative">
                  <div class="absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none">
                    <svg class="w-5 h-5 text-gray-400 group-focus-within:text-accent-600 transition-colors" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path>
                    </svg>
                  </div>
                  <input 
                    type="tel" 
                    id="phone" 
                    name="phone" 
                    class="w-full pl-12 pr-4 py-3.5 border-2 border-gray-200 rounded-xl focus:ring-2 focus:ring-accent-500 focus:border-accent-600 transition-all duration-300 bg-gray-50 focus:bg-white text-secondary-800 placeholder-gray-400"
                    placeholder="+51 999 999 999"
                  />
                </div>
              </div>
            </div>
            
            <button type="submit" class="relative w-full bg-gradient-to-r from-accent-600 to-accent-700 hover:from-accent-700 hover:to-accent-800 text-white font-bold py-4 px-8 rounded-xl transition-all duration-300 transform hover:scale-[1.02] hover:shadow-2xl hover:shadow-accent-500/50 flex items-center justify-center space-x-2 group mt-6">
              <span>Solicitar Consulta Gratuita</span>
              <svg class="w-5 h-5 group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3"></path>
              </svg>
            </button>
            
            <p class="relative text-xs text-center text-secondary-600 mt-4">
              Al enviar este formulario, acepta nuestra política de privacidad
            </p>
          </form>
        </div>
      </div>

      <!-- Contact Info -->
      <div class="animate-slide-in-right">
        <div class="space-y-8">
          <!-- Contact Details -->
          <div class="bg-white/10 backdrop-blur-sm rounded-2xl p-8">
            <h3 class="text-2xl font-bold text-white mb-6">
              Información de Contacto
            </h3>
            <div class="space-y-6">
              <div class="flex items-start space-x-4">
                <div class="w-12 h-12 bg-accent-100 rounded-lg flex items-center justify-center flex-shrink-0">
                  <svg class="w-6 h-6 text-accent-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                  </svg>
                </div>
                <div>
                  <h4 class="font-semibold text-white">Dirección</h4>
                  <p class="text-gray-300">{companyInfo.address}</p>
                </div>
              </div>
              
              <div class="flex items-center space-x-4">
                <div class="w-12 h-12 bg-accent-100 rounded-lg flex items-center justify-center flex-shrink-0">
                  <svg class="w-6 h-6 text-accent-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path>
                  </svg>
                </div>
                <div>
                  <h4 class="font-semibold text-white">Teléfono</h4>
                  <a href={`tel:${companyInfo.phone}`} class="text-gray-300 hover:text-white transition-colors">
                    {companyInfo.phone}
                  </a>
                </div>
              </div>
              
              <div class="flex items-center space-x-4">
                <div class="w-12 h-12 bg-accent-100 rounded-lg flex items-center justify-center flex-shrink-0">
                  <svg class="w-6 h-6 text-accent-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
                  </svg>
                </div>
                <div>
                  <h4 class="font-semibold text-white">Email</h4>
                  <a href={`mailto:${companyInfo.email}`} class="text-gray-300 hover:text-white transition-colors">
                    {companyInfo.email}
                  </a>
                </div>
              </div>
            </div>
          </div>

          <!-- Business Hours -->
          <div class="bg-white/10 backdrop-blur-sm rounded-2xl p-8">
            <h3 class="text-2xl font-bold text-white mb-6">
              Horarios de Atención
            </h3>
            <div class="space-y-3">
              <div class="flex justify-between">
                <span class="text-gray-300">Lunes - Viernes:</span>
                <span class="font-semibold text-white">{companyInfo.businessHours.monday}</span>
              </div>
              <div class="flex justify-between">
                <span class="text-gray-300">Sábado:</span>
                <span class="font-semibold text-white">{companyInfo.businessHours.saturday}</span>
              </div>
              <div class="flex justify-between">
                <span class="text-gray-300">Domingo:</span>
                <span class="font-semibold text-white">{companyInfo.businessHours.sunday}</span>
              </div>
            </div>
          </div>

        </div>
      </div>
    </div>
  </div>
</section>

<script>
  // Advanced Security utilities
  const SecurityUtils = {
    // Enhanced input sanitization
    sanitizeInput: function(input: string): string {
      if (typeof input !== 'string') return '';
      
      return input
        // Remove HTML tags
        .replace(/<[^>]*>/g, '')
        // Remove JavaScript protocols
        .replace(/javascript:/gi, '')
        .replace(/vbscript:/gi, '')
        .replace(/data:/gi, '')
        // Remove event handlers
        .replace(/on\w+\s*=/gi, '')
        // Remove SQL injection patterns
        .replace(/(\b(SELECT|INSERT|UPDATE|DELETE|DROP|CREATE|ALTER|EXEC|UNION|SCRIPT)\b)/gi, '')
        // Remove dangerous characters
        .replace(/[<>'"]/g, '')
        .trim()
        .substring(0, 1000);
    },
    
    // Enhanced email validation
    validateEmail: function(email: string): boolean {
      const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
      return emailRegex.test(email) && email.length <= 254;
    },
    
    // Enhanced name validation
    validateName: function(name: string): boolean {
      const nameRegex = /^[a-zA-ZáéíóúÁÉÍÓÚñÑ\s]{2,50}$/;
      return nameRegex.test(name);
    },
    
    // Validate phone number
    validatePhone: function(phone: string): boolean {
      const phoneRegex = /^[\+]?[1-9][\d]{0,15}$/;
      return phoneRegex.test(phone.replace(/[\s\-\(\)]/g, ''));
    },
    
    // Detect XSS attacks
    detectXSS: function(input: string): boolean {
      const xssPatterns = [
        /<script/i, /javascript:/i, /vbscript:/i, /onload=/i, /onerror=/i,
        /onclick=/i, /<iframe/i, /<object/i, /<embed/i, /<form/i,
        /<input/i, /<meta/i, /<link/i, /<style/i
      ];
      return xssPatterns.some(pattern => pattern.test(input));
    },
    
    // Detect SQL injection attempts
    detectSQLInjection: function(input: string): boolean {
      const sqlPatterns = [
        /(\b(SELECT|INSERT|UPDATE|DELETE|DROP|CREATE|ALTER|EXEC|UNION|SCRIPT)\b)/i,
        /(\b(OR|AND)\b.*\b(SELECT|INSERT|UPDATE|DELETE)\b)/i,
        /('|(\\')|(;)|(\\;)|(\|)|(\\|)|(\*)|(\\*)|(\s+--\s+))/i
      ];
      return sqlPatterns.some(pattern => pattern.test(input));
    },
    
    // Enhanced rate limiting with IP simulation
    rateLimit: function(key: string, maxRequests = 3, windowMs = 60000): boolean {
      const now = Date.now();
      const requests = JSON.parse(localStorage.getItem(`rate_limit_${key}`) || '[]');
      
      // Remove old requests
      const validRequests = requests.filter((time: number) => now - time < windowMs);
      
      if (validRequests.length >= maxRequests) {
        this.logSecurityEvent('Rate limit exceeded', { key, attempts: validRequests.length }, 'warn');
        return false;
      }
      
      validRequests.push(now);
      localStorage.setItem(`rate_limit_${key}`, JSON.stringify(validRequests));
      return true;
    },
    
    // Security logging
    logSecurityEvent: function(event: string, details: any, level = 'warn'): void {
      const timestamp = new Date().toISOString();
      const logEntry = {
        timestamp,
        event,
        details,
        level,
        userAgent: navigator.userAgent
      };
      
      if (level === 'error') {
        console.error('[SECURITY ERROR]', logEntry);
      } else if (level === 'warn') {
        console.warn('[SECURITY WARNING]', logEntry);
      } else {
        console.info('[SECURITY INFO]', logEntry);
      }
    },
    
    // Generate CSRF token
    generateCSRFToken: function() {
      const array = new Uint8Array(32);
      crypto.getRandomValues(array);
      return Array.from(array, byte => byte.toString(16).padStart(2, '0')).join('');
    }
  };

  // Form submission handling with security
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('contact-form');
    
    if (form) {
      form.addEventListener('submit', function(e) {
        e.preventDefault();
        
        // Rate limiting check
        if (!SecurityUtils.rateLimit('contact_form')) {
          alert('Demasiados intentos. Por favor, espere un momento antes de intentar nuevamente.');
          return;
        }
        
        // Get form data
        const formData = new FormData(form as HTMLFormElement);
        const data = Object.fromEntries(formData);
        
        // Security checks before sanitization
        const rawData = {
          name: (data.name as string) || '',
          email: (data.email as string) || '',
          company: (data.company as string) || '',
          phone: (data.phone as string) || '',
          message: (data.message as string) || ''
        };

        // Detect potential attacks
        for (const [field, value] of Object.entries(rawData)) {
          if (typeof value === 'string') {
            if (SecurityUtils.detectXSS(value)) {
              SecurityUtils.logSecurityEvent('XSS attack detected', { field, value: value.substring(0, 100) }, 'error');
              alert('Entrada no válida detectada. Por favor, revise sus datos.');
              return;
            }
            
            if (SecurityUtils.detectSQLInjection(value)) {
              SecurityUtils.logSecurityEvent('SQL injection attempt detected', { field, value: value.substring(0, 100) }, 'error');
              alert('Entrada no válida detectada. Por favor, revise sus datos.');
              return;
            }
          }
        }
        
        // Sanitize all inputs
        const sanitizedData = {
          name: SecurityUtils.sanitizeInput(rawData.name),
          email: SecurityUtils.sanitizeInput(rawData.email),
          company: SecurityUtils.sanitizeInput(rawData.company),
          phone: SecurityUtils.sanitizeInput(rawData.phone),
          message: SecurityUtils.sanitizeInput(rawData.message)
        };
        
        // Enhanced validation with security logging
        if (!sanitizedData.name || sanitizedData.name.length < 2) {
          SecurityUtils.logSecurityEvent('Invalid name provided', { name: sanitizedData.name }, 'warn');
          alert('Por favor, ingrese un nombre válido.');
          return;
        }
        
        if (!SecurityUtils.validateName(sanitizedData.name)) {
          SecurityUtils.logSecurityEvent('Name validation failed', { name: sanitizedData.name }, 'warn');
          alert('El nombre contiene caracteres no válidos.');
          return;
        }
        
        if (!sanitizedData.email || !SecurityUtils.validateEmail(sanitizedData.email)) {
          SecurityUtils.logSecurityEvent('Invalid email provided', { email: sanitizedData.email }, 'warn');
          alert('Por favor, ingrese un email válido.');
          return;
        }
        
        if (!sanitizedData.company || sanitizedData.company.length < 2) {
          SecurityUtils.logSecurityEvent('Invalid company provided', { company: sanitizedData.company }, 'warn');
          alert('Por favor, ingrese el nombre de su empresa.');
          return;
        }
        
        if (sanitizedData.phone && !SecurityUtils.validatePhone(sanitizedData.phone)) {
          SecurityUtils.logSecurityEvent('Invalid phone provided', { phone: sanitizedData.phone }, 'warn');
          alert('Por favor, ingrese un número de teléfono válido.');
          return;
        }
        
        if (!sanitizedData.message || sanitizedData.message.length < 10) {
          SecurityUtils.logSecurityEvent('Invalid message provided', { message: sanitizedData.message }, 'warn');
          alert('Por favor, ingrese un mensaje de al menos 10 caracteres.');
          return;
        }

        // Log successful form submission
        SecurityUtils.logSecurityEvent('Form submission successful', { 
          name: sanitizedData.name.substring(0, 10) + '...',
          email: sanitizedData.email.substring(0, 10) + '...',
          company: sanitizedData.company.substring(0, 10) + '...'
        }, 'info');
        
        // Simulate secure form submission
        const submitButton = form.querySelector('button[type="submit"]') as HTMLButtonElement | null;
        const originalText = submitButton?.textContent || 'Agendar Consulta Gratuita';
        
        if (submitButton) {
          submitButton.textContent = 'Enviando...';
          submitButton.disabled = true;
        }
        
        // Simulate API call with sanitized data
        setTimeout(() => {
          console.log('Form submitted with sanitized data:', sanitizedData);
          alert('¡Gracias por su solicitud! Nos pondremos en contacto con usted pronto para agendar su consulta gratuita.');
          if (form instanceof HTMLFormElement) {
            form.reset();
          }
          if (submitButton) {
            submitButton.textContent = originalText;
            submitButton.disabled = false;
          }
        }, 2000);
      });
    }
  });
</script>